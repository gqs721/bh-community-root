<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bh.model.dao.BuildingMapper">
  <resultMap id="BaseResultMap" type="com.bh.model.domain.Building">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="community_id" jdbcType="INTEGER" property="communityId" />
    <result column="by_staging" jdbcType="VARCHAR" property="byStaging" />
    <result column="building" jdbcType="VARCHAR" property="building" />
    <result column="unit" jdbcType="VARCHAR" property="unit" />
    <result column="house_number" jdbcType="VARCHAR" property="houseNumber" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="del_status" jdbcType="INTEGER" property="delStatus" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, community_id, by_staging, building, unit, house_number, status, del_status, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bh_building
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from bh_building
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.bh.model.domain.Building">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bh_building (community_id, by_staging, building, 
      unit, house_number, status, 
      del_status, create_time)
    values (#{communityId,jdbcType=INTEGER}, #{byStaging,jdbcType=VARCHAR}, #{building,jdbcType=VARCHAR}, 
      #{unit,jdbcType=VARCHAR}, #{houseNumber,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{delStatus,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.bh.model.domain.Building">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bh_building
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="communityId != null">
        community_id,
      </if>
      <if test="byStaging != null">
        by_staging,
      </if>
      <if test="building != null">
        building,
      </if>
      <if test="unit != null">
        unit,
      </if>
      <if test="houseNumber != null">
        house_number,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="delStatus != null">
        del_status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="communityId != null">
        #{communityId,jdbcType=INTEGER},
      </if>
      <if test="byStaging != null">
        #{byStaging,jdbcType=VARCHAR},
      </if>
      <if test="building != null">
        #{building,jdbcType=VARCHAR},
      </if>
      <if test="unit != null">
        #{unit,jdbcType=VARCHAR},
      </if>
      <if test="houseNumber != null">
        #{houseNumber,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="delStatus != null">
        #{delStatus,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bh.model.domain.Building">
    update bh_building
    <set>
      <if test="communityId != null">
        community_id = #{communityId,jdbcType=INTEGER},
      </if>
      <if test="byStaging != null">
        by_staging = #{byStaging,jdbcType=VARCHAR},
      </if>
      <if test="building != null">
        building = #{building,jdbcType=VARCHAR},
      </if>
      <if test="unit != null">
        unit = #{unit,jdbcType=VARCHAR},
      </if>
      <if test="houseNumber != null">
        house_number = #{houseNumber,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="delStatus != null">
        del_status = #{delStatus,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bh.model.domain.Building">
    update bh_building
    set community_id = #{communityId,jdbcType=INTEGER},
      by_staging = #{byStaging,jdbcType=VARCHAR},
      building = #{building,jdbcType=VARCHAR},
      unit = #{unit,jdbcType=VARCHAR},
      house_number = #{houseNumber,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      del_status = #{delStatus,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!-- ********* 自定义 *********** -->
  <!-- 楼栋 -->
  <resultMap id="BuildingResultMap" type="java.util.HashMap">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="community_id" jdbcType="INTEGER" property="communityId" />
    <result column="by_staging" jdbcType="VARCHAR" property="byStaging" />
    <result column="building" jdbcType="VARCHAR" property="building" />
    <result column="unit" jdbcType="VARCHAR" property="unit" />
    <result column="house_number" jdbcType="VARCHAR" property="houseNumber" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="del_status" jdbcType="INTEGER" property="delStatus" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>

  <!-- 批量删除 逻辑删除-->
  <update id="deleteBatch" parameterType="java.lang.Integer">
    update bh_building
    set del_status=1
    where id in
    <foreach collection="array" index="index" item="item"
             separator="," open="(" close=")">
      #{item}
    </foreach>
  </update>

  <!-- 数据列表 -->
  <select id="listPage" parameterType="java.util.HashMap" resultMap="BuildingResultMap">
    select
    sa.id,
    sa.community_id,
    sa.by_staging,
    sa.building,
    sa.unit,
    sa.house_number,
    sa.status,
    sa.del_status,
    sa.create_time
    from bh_building as sa
    <trim prefix="WHERE" prefixOverrides="AND|OR">
      sa.del_status=0
      <if test="keyword != null and keyword != ''">
        AND ( sa.by_staging LIKE CONCAT('%', #{keyword}, '%'))
      </if>
    </trim>
    order by by_staging
    <if test="pageNum != null and pageSize != null">
      LIMIT #{pageNum},#{pageSize}
    </if>
  </select>

  <!-- 分页数量统计 -->
  <select id="countPage" parameterType="java.util.HashMap" resultType="java.lang.Integer">
    select
    count(1)
    from bh_building as sa
    <trim prefix="WHERE" prefixOverrides="AND|OR">
      sa.del_status=0
      <if test="keyword != null and keyword != ''">
        AND ( sa.by_staging LIKE CONCAT('%', #{keyword}, '%'))
      </if>
    </trim>
  </select>

  <select id="findListByCommunityId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from bh_building as sa
    where sa.community_id = #{communityId} and sa.del_status=0
  </select>

  <!-- 查询某小区下所有的分期（不重复） -->
  <select id="findByStagingByCommunityId" parameterType="java.lang.Integer" resultType="String">
    select DISTINCT(by_staging) from bh_building as sa
    where sa.community_id = #{communityId} and sa.del_status=0
  </select>

  <!-- 查询某小区下某分期的楼栋（不重复） -->
  <select id="findBuilding" resultType="String">
    select DISTINCT(building) from bh_building as sa
    where sa.community_id = #{communityId} and sa.by_staging = #{byStaging} and sa.del_status=0
  </select>

  <!-- 查询某小区下某分期的某楼栋的单元数（不重复） -->
  <select id="findUnit" resultMap="BuildingResultMap">
    select
    sa.id,
    sa.unit
    from bh_building as sa
    where sa.community_id = #{communityId} and sa.by_staging = #{byStaging} and sa.building = #{building} and sa.del_status=0
  </select>
</mapper>